# This is an example of the config file for reviewbot.
# Reviewbot follows a zero-configuration approach in its design, where the default behavior implemented in the code should be suitable for the majority of scenarios.
# Configuration of the file is only necessary in special cases, such as:
# 1. Using specific commands for a particular repository.
# 2. Modifying the default global configuration.
# 3. Conducting specific gray testing for a particular feature.

globalDefaultConfig: # global default settings, will be overridden by qbox org and repo specific settings if they exist
  githubReportType: "github_mix" # github_pr_review, github_check_run, github_mix
  golangcilintConfig: "config/linters-config/.golangci.yml" # golangci-lint config file to use
  copySSHKeyToContainer: "/root/.ssh/id_rsa"

customConfig: # custom config for specific orgs or repos
  goplus:
    linters:
      golangci-lint:
        enable: true
        configPath: "/config/linters-config/.golangci.goplus.yml"

  goplus/llgo:
    linters:
      golangci-lint:
        enable: false

  qbox/zrs:
    refs:
      - org: qbox
        repo: kodo
    linters:
      gomodcheck:
        enable: false
  qbox/kodoe-manager:
    refs:
      - org: qbox
        repo: kodo
  qbox/configcenter:
    refs:
      - org: qbox
        repo: kodo
  qbox/logverse:
    refs:
      - org: qbox
        repo: kodo

  qbox/kodo:
    linters:
      golangci-lint:
        enable: true
        dockerAsRunner:
          # kodo only use go1.22.+, see kodo/logservice/logupload/version/check_test.go
          image: "aslan-spock-register.qiniu.io/reviewbot/base:go1.22.3-gocilint.1.59.1"
        command:
          - "/bin/sh"
          - "-c"
          - "--"
        args:
          - |
            source env.sh
            cp .golangci.yml src/qiniu.com/kodo/.golangci.yml
            cd src/qiniu.com/kodo
            export GO111MODULE=auto
            go mod tidy
            golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1

  qbox/kodo-ops:
    refs:
      - org: qbox
        repo: kodo
    linters:
      golangci-lint:
        enable: true
        command:
          - "/bin/sh"
          - "-c"
          - "--"
        args:
          - |
            cd website && yarn build && cd ..
            golangci-lint run --enable-all --timeout=5m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1

  qbox/user-center:
    linters:
      golangci-lint:
        enable: true
        command:
          - "/bin/sh"
          - "-c"
          - "--"
        args:
          - |
            export GO111MODULE=auto
            cd uc
            go mod tidy
            golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1
            cd ../uc-biz
            go mod tidy
            golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1

  qbox/jarvis:
    linters:
      golangci-lint:
        enable: true
        command:
          - "/bin/sh"
          - "-c"
          - "--"
        args:
          - |
            source scripts/ci/ci_env_init.sh
            export GO111MODULE=auto
            go mod tidy
            CGO_ENABLED=1 golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1
        dockerAsRunner:
          image: "aslan-spock-register.qiniu.io/reviewbot/base:go1.22.3-gocilint.1.59.1"

  qiniu/reviewbot:
    linters:
      golangci-lint:
        enable: true
        kubernetesAsRunner:
          image: "aslan-spock-register.qiniu.io/reviewbot/base:go1.23.2-gocilint.1.61.0"
          namespace: "reviewbot"

  qbox/ffmpeg:
    refs:
      - org: qbox
        repo: ffmpeg
        pathAlias: "src/qbox.com/ffmpeg"

  qbox/net-schedule:
    linters:
      golangci-lint:
        dockerAsRunner:
          image: "aslan-spock-register.qiniu.io/reviewbot/base:go1.20.14-gocilint.1.61.0"
  qbox/net-pcdn:
    refs:
      - org: qbox
        repo: kodo

issueReferences:
  golangci-lint:
    - pattern: "ST1003"
      url: "https://github.com/qiniu/reviewbot/issues/398"
    - pattern: '^do not define dynamic errors, use wrapped static errors instead:.*\(err113\)$'
      url: "https://github.com/qiniu/reviewbot/issues/418"
    - pattern: '^found a struct that contains a context.Context field \(containedctx\)$'
      url: "https://github.com/qiniu/reviewbot/issues/420"
  shellcheck:
    - pattern: '\[SC2086\]$'
      url: "https://github.com/qiniu/reviewbot/issues/413"
