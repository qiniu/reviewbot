# Reviewbot follows a zero-configuration approach in its design, where the default behavior implemented in the code should be suitable for the majority of scenarios.
# Configuration of the file is only necessary in special cases, such as:
# 1. Using specific commands for a particular repository.
# 2. Modifying the default global configuration.
# 3. Conducting specific gray testing for a particular feature.

globalDefaultConfig: # global default settings, will be overridden by qbox org and repo specific settings if they exist
  githubReportType: "github_check_run" # github_pr_review, github_check_run
  golangcilintConfig: "config/linters-config/.golangci.yml" # golangci-lint config file to use

customConfig: # custom config for specific orgs or repos
  goplus:
    golangci-lint:
      enable: true
      configPath: "/config/linters-config/.golangci.goplus.yml"

  goplus/llgo:
    golangci-lint:
      enable: false

  qbox/kodo:
    golangci-lint:
      enable: true
      command:
        - "/bin/sh"
        - "-c"
        - "--"
      args:
        - |
          source env.sh
          cp .golangci.yml src/qiniu.com/kodo/.golangci.yml
          cd src/qiniu.com/kodo
          export GO111MODULE=auto
          go mod tidy
          golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1

  qbox/kodo-ops:
    golangci-lint:
      enable: true
      command:
        - "/bin/sh"
        - "-c"
        - "--"
      args:
        - |
          cd website && yarn build && cd ..
          golangci-lint run --enable-all --timeout=5m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1

  qbox/user-center:
    golangci-lint:
      enable: true
      command:
        - "/bin/sh"
        - "-c"
        - "--"
      args:
        - |
          export GO111MODULE=auto
          cd uc
          go mod tidy
          golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1
          cd ../uc-biz
          go mod tidy
          golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1

  qbox/jarvis:
    golangci-lint:
      enable: true
      command:
        - "/bin/sh"
        - "-c"
        - "--"
      args:
        - |
          source scripts/ci/ci_env_init.sh
          export GO111MODULE=auto
          go mod tidy
          CGO_ENABLED=1 golangci-lint run --timeout=10m0s --allow-parallel-runners=true --print-issued-lines=false --out-format=line-number >> $ARTIFACT/lint.log 2>&1
      dockerAsRunner: 
        image: "aslan-spock-register.qiniu.io/reviewbot/base:golangci-lint.1.59.1"
        copylinterFromOrigin:  false